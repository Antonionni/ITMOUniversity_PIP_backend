# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /azaza                                                  controllers.Application.index
GET         /                                                       controllers.Assets.at(path="/public", file = "index.html")
GET         /restricted                                             controllers.Application.restricted
GET         /assets/javascript/routes.js                            controllers.Application.jsRoutes

GET         /profile                                                controllers.Application.profile

GET         /login                                                  controllers.Application.login
POST        /login                                                  controllers.Application.doLogin

GET         /logout                                                 com.feth.play.module.pa.controllers.Authenticate.logout
GET         /authenticate/:provider                                 com.feth.play.module.pa.controllers.Authenticate.authenticate(provider: String)

GET         /signup                                                 controllers.Application.signup
POST        /signup                                                 controllers.Application.doSignup

GET         /accounts/unverified                                    controllers.Signup.unverified
GET         /authenticate/:provider/denied                          controllers.Signup.oAuthDenied(provider: String)

GET         /accounts/verify/:token                                 controllers.Signup.verify(token: String)
GET         /accounts/exists                                        controllers.Signup.exists

GET         /accounts/password/reset/:token                         controllers.Signup.resetPassword(token: String)
POST        /accounts/password/reset                                controllers.Signup.doResetPassword

GET         /accounts/password/change                               controllers.Account.changePassword
POST        /accounts/password/change                               controllers.Account.doChangePassword

GET         /accounts/verify                                        controllers.Account.verifyEmail

GET         /accounts/add                                           controllers.Account.link

GET         /accounts/link                                          controllers.Account.askLink
POST        /accounts/link                                          controllers.Account.doLink

GET         /accounts/merge                                         controllers.Account.askMerge
POST        /accounts/merge                                         controllers.Account.doMerge

GET         /login/password/forgot                                  controllers.Signup.forgotPassword(email: String ?= "")
POST        /login/password/forgot                                  controllers.Signup.doForgotPassword


GET         /users/student/:id                                      controllers.api.UserController.getStudent(id: Integer)
GET         /users/teacher/:id                                      controllers.api.UserController.getTeacher(id: Integer)
GET         /users/user/:id                                         controllers.api.UserController.getUser(id: Integer, role: String ?= "")
GET         /users/user/:id/:role                                   controllers.api.UserController.getUser(id: Integer, role: String)
GET         /users/userWithSeveralRoles/:id/:roles                  controllers.api.UserController.getUserWithSeveralRoles(id: Integer, roles: String)
POST        /users/update                                           controllers.api.UserController.update
GET         /profile/new                                            controllers.api.UserController.getProfile

GET         /courselist/randomlist/:size                            controllers.api.CourseListController.listRandomCourses(size: Integer)
GET         /courselist/find/:keyword/:pageNumber                   controllers.api.CourseListController.findCourses(keyword: String, pageNumber: Integer)
POST        /courselist/subscribe/:id                               controllers.api.CourseListController.subscribeToCourse(id: Integer)

GET         /courses/get/:id                                        controllers.api.CourseController.get(id: Integer)
POST        /courses/create                                         controllers.api.CourseController.create
POST        /courses/update                                         controllers.api.CourseController.update
POST        /courses/delete/:id                                     controllers.api.CourseController.delete(id: Integer)

POST        /courses/period/create/:courseId                        controllers.api.CourseController.createCoursePeriod(courseId: Integer)
POST        /courses/period/update/:courseId                        controllers.api.CourseController.updateCoursePeriod(courseId: Integer)
POST        /courses/period/delete/:coursePeriodId                  controllers.api.CourseController.deleteCoursePeriod(coursePeriodId: Integer)

GET         /courses/lesson/get/:id                                 controllers.api.LessonController.get(id: Integer)
POST        /courses/lesson/create/:courseId                        controllers.api.LessonController.create(courseId: Integer)
POST        /courses/lesson/update/:courseId                        controllers.api.LessonController.update(courseId: Integer)
POST        /courses/lesson/delete/:lessonId                        controllers.api.LessonController.delete(lessonId: Integer)

GET         /courses/lesson/material/get/:id                        controllers.api.LessonController.getMaterial(id: Integer)
POST        /courses/lesson/material/create/:lessonId               controllers.api.LessonController.createMaterial(lessonId: Integer)
POST        /courses/lesson/material/update/:lessonId               controllers.api.LessonController.updateMaterial(lessonId: Integer)
POST        /courses/lesson/material/delete/:materialId             controllers.api.LessonController.deleteMaterial(materialId: Integer)

GET         /courses/lesson/test/get/:id                            controllers.api.LessonController.getTest(id: Integer)
POST        /courses/lesson/test/create/:lessonId                   controllers.api.LessonController.createTest(lessonId: Integer)
POST        /courses/lesson/test/update/:lessonId                   controllers.api.LessonController.updateTest(lessonId: Integer)
POST        /courses/lesson/test/delete/:testId                     controllers.api.LessonController.deleteTest(testId: Integer)

POST        /courses/lesson/test/question/create/:testId            controllers.api.LessonController.createQuestion(testId: Integer)
POST        /courses/lesson/test/question/update/:testId            controllers.api.LessonController.updateQuestion(testId: Integer)
POST        /courses/lesson/test/question/delete/:questionId        controllers.api.LessonController.deleteQuestion(questionId: Integer)

POST        /courses/lesson/test/passage/start/:testId              controllers.api.PassageController.startPassage(testId: Integer)
POST        /courses/lesson/test/passage/close                      controllers.api.PassageController.submitPassageItems
POST        /courses/lesson/test/passage/verifyItem                 controllers.api.PassageController.verifyPassageItem
POST        /courses/lesson/test/passage/listItems/:passageId                  controllers.api.PassageController.listNeedToVerifiedPassages(passageId: Integer)

# Map static resources from the /public folder to the /assets URL path
GET         /*file                                           controllers.Assets.versioned(path="/public", file: Asset)
